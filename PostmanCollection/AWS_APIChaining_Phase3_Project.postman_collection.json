{
	"info": {
		"_postman_id": "8a9f7d76-a149-4e2e-93a9-01dd8a87bbee",
		"name": "AWS_APIChaining_Phase3_Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20973464"
	},
	"item": [
		{
			"name": "Get All Employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Success',function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/employees",
					"host": [
						"{{URL}}"
					],
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"const jsonResponse = pm.response.json();\r",
							"pm.collectionVariables.set(\"EMP_ID\", jsonResponse.id);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"FN\",\r\n    \"lastName\": \"LN\",\r\n    \"salary\": 1000,\r\n    \"email\": \"fnln@abc.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/employees",
					"host": [
						"{{URL}}"
					],
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Employee by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql(\"FN-Updated\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"FN-Updated\",\r\n    \"lastName\": \"LN\",\r\n    \"salary\": 6000,\r\n    \"email\": \"fnln@abc.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/employees/{{EMP_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"employees",
						"{{EMP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Employee by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"// pm.test(\"Validate Updated Name\", function () {\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData[0].name).to.eql(\"AA-Updated\");\r",
							"// });\r",
							"\r",
							"// pm.test(\"Validate Salary\", function () {\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData[0].salary).to.eql(5000);\r",
							"// });\r",
							"\r",
							"pm.test(\"Validate Updated Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql(\"FN-Updated\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Name is not FN\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.not.eql(\"FN\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate Salary\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(6000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/employees/{{EMP_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"employees",
						"{{EMP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Employee by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/employees/{{EMP_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"employees",
						"{{EMP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate Deleted Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// pm.collectionVariables.get(\"EMP_ID\");\r",
							"\r",
							"pm.test(\"EMP ID not found\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.details).contains(\"Employee not found with empId : \"+ \"'\" + pm.collectionVariables.get(\"EMP_ID\")+ \"'\" );\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/employees/{{EMP_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"employees",
						"{{EMP_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Success',function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Name: AA-Updated is not returned\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"AA-Updated\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/employees",
					"host": [
						"{{URL}}"
					],
					"path": [
						"employees"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://3.91.99.123:8088",
			"type": "string"
		},
		{
			"key": "EMP_ID",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"value": "0) sudo yum update -y\n1) sudo yum install java-1.8.0 -y\n2) sudo yum install maven -y\n3) sudo yum install git -y\n4) git clone https://github.com/onlyfullstack/rest-assured-tutorial.git\n5) mvn spring-boot:run",
			"type": "string"
		}
	]
}